package MapFile;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.charset.Charset;
import java.util.List;

import org.geotools.data.FeatureSource;
import org.geotools.data.FileDataStore;
import org.geotools.data.FileDataStoreFinder;
import org.geotools.data.shapefile.ShapefileDataStore;
import org.geotools.data.shapefile.dbf.DbaseFileHeader;
import org.geotools.data.shapefile.dbf.DbaseFileReader;
import org.geotools.data.shapefile.files.ShpFiles;
import org.geotools.feature.FeatureCollection;
import org.geotools.feature.FeatureIterator;
import org.opengis.feature.simple.SimpleFeature;
import org.opengis.feature.simple.SimpleFeatureType;
import org.opengis.feature.type.AttributeDescriptor;
import org.opengis.geometry.Geometry;



/**    
 *     
 * 项目名称：TwoMap    
 * 类名称：FileRead    
 * 类描述：    
 * 创建人：jinyu    
 * 创建时间：2018年4月2日 上午1:27:44    
 * 修改人：jinyu    
 * 修改时间：2018年4月2日 上午1:27:44    
 * 修改备注：    
 * @version     
 *     
 */
public class FileReadObject {
    public void readSHP(String shpPath) {  
        try{  
            File file = new File (shpPath);  
            FileDataStore store = FileDataStoreFinder.getDataStore(file); 
            //设置字符编码  
            Charset charset = Charset.forName("GBK");  
            store.setCharset(charset);  
            String typeName = shpDataStore.getTypeNames()[0];  
            SimpleFeatureSource featureSource = null;  
            featureSource =  shpDataStore.getFeatureSource (typeName);  
            SimpleFeatureCollection result = featureSource.getFeatures();  
            SimpleFeatureIterator itertor = result.features();  
            while (itertor.hasNext())  
            {  
                Map<String,Object> data  = new HashMap<String, Object>();  
                SimpleFeature feature = itertor.next();  
                Collection<Property> p = feature.getProperties();  
                Iterator<Property> it = p.iterator();  
                while(it.hasNext()) {  
                    Property pro = it.next();  
                    String field = pro.getName().toString();  
                    String value = pro.getValue().toString();  
                    field = field.equals("the_geom")?"wkt":field;  
                    data.put(field, value);  
                }  
                list.add(data);  
            }  
    }  
    public void readDBF(String path) {  
        DbaseFileReader reader = null;  
        try {  
            reader = new DbaseFileReader(new ShpFiles(path), false,  
                    Charset.forName("GBK"));  
            DbaseFileHeader header = reader.getHeader();  
            int numFields = header.getNumFields();  
            for (int i = 0; i < numFields; i++) {  
                header.getFieldName(i);  
                header.getFieldType(i);// 'C','N'  
                header.getFieldLength(i);  
            }  
      
            // 迭代读取记录  
            while (reader.hasNext()) {  
                try {  
                    Object[] entry = reader.readEntry();  
                    for (int i = 0; i < numFields; i++) {  
                        String title = header.getFieldName(i);  
                        Object value = entry[i];  
                        String name = title.toString(); // column  
                        String info = value.toString(); // value  
                    }  
                } catch (Exception e) {  
                    e.printStackTrace();  
                }  
            }  
        } catch (Exception ex) {  
            ex.printStackTrace();  
        } finally {  
            if (reader != null) {  
                // 关闭  
                try {  
                    reader.close();  
                } catch (Exception e) {  
                }  
            }  
        }  
    }  
}
